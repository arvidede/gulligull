{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/assets/heart-solid.svg","components/TodoList/index.js","components/TodoList/List.js","components/SignIn/index.js","components/SignIn/SignIn.js","components/assets/sign-out-alt-solid.svg","components/App/App.js","components/App/index.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doGetList","db","collection","doc","get","doSubscribe","callback","onSnapshot","data","list","doAddNewTodo","todo","update","app","firestore","FieldValue","arrayUnion","doRemoveTodo","arrayRemove","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","ref","concat","users","messages","initializeApp","_extends","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","heart_solid_ref","fill","d","heart_solid_SvgComponent","aria-hidden","data-prefix","data-icon","className","role","viewBox","List","__webpack_require__","p","state","todos","inputValue","handleNewTodo","event","preventDefault","setState","handleRemoveTodo","index","_this2","then","_this3","_this$state","onSubmit","type","value","onChange","e","onClick","map","SignIn","username","hasLoaded","handleSubmit","handleInputChange","defineProperty","name","setTimeout","loadedName","autoCorrect","spellCheck","title","src","frameBorder","allow","autoPlay","sign_out_alt_solid_extends","sign_out_alt_solid_ref","sign_out_alt_solid_SvgComponent","App","possibleConstructorReturn","getPrototypeOf","JSON","parse","localStorage","getItem","listener","setItem","stringify","removeItem","Fragment","App_Header","TodoList","components_SignIn","Header","_ref","Boolean","window","location","hostname","match","ReactDOM","render","context","Provider","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efef28d0.chunk.js","sourcesContent":["import React from \"react\"\n\nconst FirebaseContext = React.createContext(null)\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n)\n\nexport default FirebaseContext\n","import app from \"firebase/app\"\nimport \"firebase/auth\"\nimport \"firebase/firestore\"\n\nconst prodConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n}\n\nconst devConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n}\n\nconst config = process.env.NODE_ENV === \"production\" ? prodConfig : devConfig\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config)\n        this.db = app.firestore()\n        this.auth = app.auth()\n    }\n\n    // *** Auth API ***\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password)\n\n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password)\n\n    doSignOut = () => this.auth.signOut()\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email)\n\n    doPasswordUpdate = password =>\n        this.auth.currentUser.updatePassword(password)\n\n    doGetList = () =>\n        this.db\n            .collection(\"todo\")\n            .doc(\"list\")\n            .get()\n\n    doSubscribe = callback =>\n        this.db\n            .collection(\"todo\")\n            .doc(\"list\")\n            .onSnapshot(doc => callback(doc.data().list))\n\n    doAddNewTodo = todo =>\n        this.db\n            .collection(\"todo\")\n            .doc(\"list\")\n            .update({\n                list: app.firestore.FieldValue.arrayUnion(todo)\n            })\n\n    doRemoveTodo = todo =>\n        this.db\n            .collection(\"todo\")\n            .doc(\"list\")\n            .update({\n                list: app.firestore.FieldValue.arrayRemove(todo)\n            })\n\n    // *** Merge Auth and DB User API *** //\n\n    onAuthUserListener = (next, fallback) =>\n        this.auth.onAuthStateChanged(authUser => {\n            if (authUser) {\n                // this.user(authUser.uid)\n                //     .once(\"value\")\n                //     .then(snapshot => {\n                //         const dbUser = snapshot.val()\n\n                //         // default empty roles\n                //         if (!dbUser.roles) {\n                //             dbUser.roles = []\n                //         }\n\n                //         // merge auth and db user\n                //         authUser = {\n                //             uid: authUser.uid,\n                //             email: authUser.email,\n                //             ...dbUser\n                //         }\n\n                //         next(authUser)\n                //     })\n\n                next(authUser)\n            } else {\n                fallback()\n            }\n        })\n\n    // *** User API ***\n\n    user = uid => this.db.ref(`users/${uid}`)\n\n    users = () => this.db.ref(\"users\")\n\n    // *** Message API ***\n\n    messages = () => this.db.ref(\"messages\")\n}\n\nexport default Firebase\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"heart\",\n    className: \"svg-inline--fa fa-heart fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/heart-solid.820a9333.svg\";\nexport { SvgComponent as ReactComponent };","import List from './List.js'\n\nexport default List\n","import React, { Component } from \"react\"\nimport { withFirebase } from \"../Firebase/\"\nimport { ReactComponent as Heart } from '../assets/heart-solid.svg'\nimport \"./List.css\"\n\nclass List extends Component {\n    state = {\n        todos: [],\n        inputValue: \"\"\n    }\n\n    componentDidMount() {\n        this.props.firebase\n            .doGetList()\n            .then(doc => this.setState({ todos: doc.data().list }))\n\n        this.props.firebase.doSubscribe(todos => this.setState({ todos }))\n    }\n\n    handleNewTodo = event => {\n        event.preventDefault()\n        const { inputValue } = this.state\n        if (inputValue.length > 0) {\n            this.setState({ inputValue: \"\" })\n            this.props.firebase.doAddNewTodo(inputValue)\n        }\n    }\n\n    handleRemoveTodo = index => {\n        const { todos } = this.state\n        this.props.firebase.doRemoveTodo(todos[index])\n    }\n\n    render() {\n        const { todos, inputValue } = this.state\n        return (\n            <div className=\"list-container\">\n                <h1>Saker Att Göra Medan Man Pussas</h1>\n                <form onSubmit={this.handleNewTodo}>\n                    <input\n                        type=\"text\"\n                        value={inputValue}\n                        onChange={e =>\n                            this.setState({ inputValue: e.target.value })\n                        }\n                    />\n                    <button onClick={this.handleNewTodo}><Heart /></button>\n                </form>\n                <div className=\"list\">\n                    <ul>\n                        {todos.map((todo, index) => (\n                            <li key={index}>\n                                <span>{todo}</span>\n                                <button\n                                    onClick={() => this.handleRemoveTodo(index)}\n                                />\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withFirebase(List)\n","import SignIn from './SignIn.js'\n\nexport default SignIn\n","import React, { Component } from \"react\"\nimport { withFirebase } from \"../Firebase/\"\nimport \"./SignIn.css\"\n\nclass SignIn extends Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        hasLoaded: false\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.firebase.doSignInWithEmailAndPassword(\n            this.state.username,\n            this.state.password\n        )\n    }\n\n    handleInputChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    componentDidMount() {\n        setTimeout(() => this.setState({ hasLoaded: true }), 2000)\n    }\n\n    render() {\n        const loadedName = this.state.hasLoaded\n            ? \"login-content active\"\n            : \"login-content\"\n        return (\n            <div className=\"login-container\">\n                <div className={loadedName}>\n                    <h2>\n                        Speak Friend\n                        <br />\n                        and Enter\n                    </h2>\n                    <form onSubmit={this.handleSubmit}>\n                        <input\n                            type=\"text\"\n                            name=\"username\"\n                            onChange={this.handleInputChange}\n                            autoCorrect=\"off\"\n                            spellCheck=\"false\"\n                        />\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            onChange={this.handleInputChange}\n                        />\n                        <input type=\"submit\" value=\"Mellon\" />\n                    </form>\n                </div>\n                <iframe\n                    title=\"title\"\n                    src=\"https://www.youtube.com/embed/sQ9NOV3KNpY?controls=0&autoplay=1\"\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                    autoPlay\n                />\n            </div>\n        )\n    }\n}\n\nexport default withFirebase(SignIn)\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M497 273L329 441c-15 15-41 4.5-41-17v-96H152c-13.3 0-24-10.7-24-24v-96c0-13.3 10.7-24 24-24h136V88c0-21.4 25.9-32 41-17l168 168c9.3 9.4 9.3 24.6 0 34zM192 436v-40c0-6.6-5.4-12-12-12H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h84c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12H96c-53 0-96 43-96 96v192c0 53 43 96 96 96h84c6.6 0 12-5.4 12-12z\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"sign-out-alt\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/sign-out-alt-solid.62aaba37.svg\";\nexport { SvgComponent as ReactComponent };","import React, { Component } from \"react\"\nimport List from \"../TodoList\"\nimport { withFirebase } from \"../Firebase/\"\nimport SignIn from \"../SignIn/\"\nimport { ReactComponent as Logo } from \"../assets/sign-out-alt-solid.svg\"\nimport \"./App.css\"\nimport './normalize.css'\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            authUser: JSON.parse(localStorage.getItem(\"authUser\"))\n        }\n    }\n\n    componentDidMount() {\n        this.listener = this.props.firebase.onAuthUserListener(\n            authUser => {\n                localStorage.setItem(\"authUser\", JSON.stringify(authUser))\n                this.setState({ authUser })\n            },\n            () => {\n                localStorage.removeItem(\"authUser\")\n                this.setState({ authUser: null })\n            }\n        )\n    }\n\n    componentWillUnmount() {\n        this.listener()\n    }\n\n    render() {\n        const { authUser } = this.state\n        const { firebase } = this.props\n        return (\n            <div className=\"App\">\n                {authUser ? (\n                    <React.Fragment>\n                        <Header firebase={firebase} />\n                        <List />\n                    </React.Fragment>\n                ) : (\n                    <SignIn />\n                )}\n            </div>\n        )\n    }\n}\n\nconst Header = ({ firebase }) => {\n    return (\n        <header>\n            <button onClick={firebase.doSignOut}>\n                <Logo />\n            </button>\n        </header>\n    )\n}\n\nexport default withFirebase(App)\n","import App from \"./App.js\"\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./components/App\"\nimport Firebase, { FirebaseContext } from \"./components/Firebase\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}