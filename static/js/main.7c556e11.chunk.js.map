{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/assets/heart-solid.svg","components/TodoList/List.js","components/TodoList/index.js","components/SignIn/index.js","components/SignIn/SignIn.js","components/assets/sign-out-alt-solid.svg","components/App/App.js","components/App/index.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doGetList","callback","db","collection","doc","onSnapshot","data","doAddNewTodo","todo","subject","update","defineProperty","app","firestore","FieldValue","arrayUnion","doRemoveTodo","arrayRemove","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","ref","concat","users","messages","initializeApp","_extends","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","heart_solid_ref","fill","d","heart_solid_SvgComponent","aria-hidden","data-prefix","data-icon","className","role","viewBox","TABS","__webpack_require__","p","title","index","List","state","selectedTab","inputValue","handleNewTodo","event","preventDefault","_this$state","setState","handleRemoveTodo","_this$state2","handleTabChange","_this2","_this3","_this$state3","todos","onSubmit","type","value","onChange","e","onClick","map","tab","SignIn","username","hasLoaded","handleSubmit","handleInputChange","name","setTimeout","loadedName","autoCorrect","spellCheck","src","frameBorder","allow","autoPlay","sign_out_alt_solid_extends","sign_out_alt_solid_ref","sign_out_alt_solid_SvgComponent","App","possibleConstructorReturn","getPrototypeOf","JSON","parse","localStorage","getItem","listener","setItem","stringify","removeItem","Fragment","App_Header","TodoList","components_SignIn","Header","_ref","Boolean","window","location","hostname","match","ReactDOM","render","context","Provider","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c556e11.chunk.js","sourcesContent":["import React from \"react\"\n\nconst FirebaseContext = React.createContext(null)\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n)\n\nexport default FirebaseContext\n","import app from \"firebase/app\"\nimport \"firebase/auth\"\nimport \"firebase/firestore\"\n\nconst prodConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n}\n\nconst devConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n}\n\nconst config = process.env.NODE_ENV === \"production\" ? prodConfig : devConfig\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config)\n        this.db = app.firestore()\n        this.auth = app.auth()\n    }\n\n    // *** Auth API ***\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password)\n\n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password)\n\n    doSignOut = () => this.auth.signOut()\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email)\n\n    doPasswordUpdate = password =>\n        this.auth.currentUser.updatePassword(password)\n\n    doGetList = (callback) =>\n        this.db\n            .collection(\"todo\")\n            .doc(\"list\")\n            .onSnapshot(doc => callback(doc.data()))\n\n    doAddNewTodo = (todo, subject) =>\n        this.db\n            .collection(\"todo\")\n            .doc(\"list\")\n            .update({\n                [subject]: app.firestore.FieldValue.arrayUnion(todo)\n            })\n\n    doRemoveTodo = (todo, subject) =>\n        this.db\n            .collection(\"todo\")\n            .doc(\"list\")\n            .update({\n                [subject]: app.firestore.FieldValue.arrayRemove(todo)\n            })\n\n    // *** Merge Auth and DB User API *** //\n\n    onAuthUserListener = (next, fallback) =>\n        this.auth.onAuthStateChanged(authUser => {\n            if (authUser) {\n                // this.user(authUser.uid)\n                //     .once(\"value\")\n                //     .then(snapshot => {\n                //         const dbUser = snapshot.val()\n\n                //         // default empty roles\n                //         if (!dbUser.roles) {\n                //             dbUser.roles = []\n                //         }\n\n                //         // merge auth and db user\n                //         authUser = {\n                //             uid: authUser.uid,\n                //             email: authUser.email,\n                //             ...dbUser\n                //         }\n\n                //         next(authUser)\n                //     })\n\n                next(authUser)\n            } else {\n                fallback()\n            }\n        })\n\n    // *** User API ***\n\n    user = uid => this.db.ref(`users/${uid}`)\n\n    users = () => this.db.ref(\"users\")\n\n    // *** Message API ***\n\n    messages = () => this.db.ref(\"messages\")\n}\n\nexport default Firebase\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"heart\",\n    className: \"svg-inline--fa fa-heart fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/heart-solid.820a9333.svg\";\nexport { SvgComponent as ReactComponent };","import React, { Component } from 'react'\nimport { withFirebase } from '../Firebase/'\nimport { ReactComponent as Heart } from '../assets/heart-solid.svg'\nimport './List.css'\n\nconst TABS = [\n    {\n        title: 'Todo',\n        db: 'todo',\n        index: 0,\n    },\n    {\n        title: 'Titta',\n        db: 'watch',\n        index: 1,\n    },\n    {\n        title: 'Mat',\n        db: 'food',\n        index: 2\n    }\n]\n\nclass List extends Component {\n    state = {\n        data: {},\n        selectedTab: TABS[0],\n        inputValue: ''\n    }\n\n    componentDidMount() {\n        this.props.firebase\n            .doGetList(data => this.setState({ data }))\n    }\n\n    handleNewTodo = event => {\n        event.preventDefault()\n        const { inputValue, selectedTab } = this.state\n        if (inputValue.length > 0) {\n            this.setState({ inputValue: '' })\n            this.props.firebase.doAddNewTodo(inputValue, selectedTab.db)\n        }\n    }\n\n    handleRemoveTodo = index => {\n        const { data, selectedTab } = this.state\n        this.props.firebase.doRemoveTodo(data[selectedTab.db][index], selectedTab.db)\n    }\n\n    handleTabChange = index => {\n        this.setState({ selectedTab: TABS[index] })\n    }\n\n    render() {\n        const { data, inputValue, selectedTab } = this.state\n        const todos = data[selectedTab.db] ? data[selectedTab.db] : []\n        return (\n            <div className=\"list-container\">\n                <h1>Saker Att Göra Medan Man Pussas</h1>\n                <form onSubmit={this.handleNewTodo}>\n                    <input\n                        type=\"text\"\n                        value={inputValue}\n                        onChange={e =>\n                            this.setState({ inputValue: e.target.value })\n                        }\n                    />\n                    <button onClick={this.handleNewTodo}>\n                        <Heart />\n                    </button>\n                </form>\n                <div className=\"tabs\">\n                    {TABS.map((tab, index) => (\n                        <div\n                            key={index}\n                            className={\n                                this.state.selectedTab.index === index\n                                    ? 'tab active'\n                                    : 'tab'\n                            }\n                        >\n                            <button onClick={() => this.handleTabChange(index)}>\n                                {tab.title}\n                            </button>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"list\">\n                    <ul>\n                        {todos.map((todo, index) => (\n                            <li key={index}>\n                                <span>{todo}</span>\n                                <button\n                                    onClick={() => this.handleRemoveTodo(index)}\n                                />\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withFirebase(List)\n","import List from './List.js'\n\nexport default List\n","import SignIn from './SignIn.js'\n\nexport default SignIn\n","import React, { Component } from \"react\"\nimport { withFirebase } from \"../Firebase/\"\nimport \"./SignIn.css\"\n\nclass SignIn extends Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        hasLoaded: false\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.firebase.doSignInWithEmailAndPassword(\n            this.state.username,\n            this.state.password\n        )\n    }\n\n    handleInputChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    componentDidMount() {\n        setTimeout(() => this.setState({ hasLoaded: true }), 2000)\n    }\n\n    render() {\n        const loadedName = this.state.hasLoaded\n            ? \"login-content active\"\n            : \"login-content\"\n        return (\n            <div className=\"login-container\">\n                <div className={loadedName}>\n                    <h2>\n                        Speak Friend\n                        <br />\n                        and Enter\n                    </h2>\n                    <form onSubmit={this.handleSubmit}>\n                        <input\n                            type=\"text\"\n                            name=\"username\"\n                            onChange={this.handleInputChange}\n                            autoCorrect=\"off\"\n                            spellCheck=\"false\"\n                        />\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            onChange={this.handleInputChange}\n                        />\n                        <input type=\"submit\" value=\"Mellon\" />\n                    </form>\n                </div>\n                <iframe\n                    title=\"title\"\n                    src=\"https://www.youtube.com/embed/sQ9NOV3KNpY?controls=0&autoplay=1\"\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                    autoPlay\n                />\n            </div>\n        )\n    }\n}\n\nexport default withFirebase(SignIn)\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M497 273L329 441c-15 15-41 4.5-41-17v-96H152c-13.3 0-24-10.7-24-24v-96c0-13.3 10.7-24 24-24h136V88c0-21.4 25.9-32 41-17l168 168c9.3 9.4 9.3 24.6 0 34zM192 436v-40c0-6.6-5.4-12-12-12H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h84c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12H96c-53 0-96 43-96 96v192c0 53 43 96 96 96h84c6.6 0 12-5.4 12-12z\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"sign-out-alt\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/sign-out-alt-solid.62aaba37.svg\";\nexport { SvgComponent as ReactComponent };","import React, { Component } from \"react\"\nimport List from \"../TodoList\"\nimport { withFirebase } from \"../Firebase/\"\nimport SignIn from \"../SignIn/\"\nimport { ReactComponent as Logo } from \"../assets/sign-out-alt-solid.svg\"\nimport \"./App.css\"\nimport './normalize.css'\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            authUser: JSON.parse(localStorage.getItem(\"authUser\"))\n        }\n    }\n\n    componentDidMount() {\n        this.listener = this.props.firebase.onAuthUserListener(\n            authUser => {\n                localStorage.setItem(\"authUser\", JSON.stringify(authUser))\n                this.setState({ authUser })\n            },\n            () => {\n                localStorage.removeItem(\"authUser\")\n                this.setState({ authUser: null })\n            }\n        )\n    }\n\n    componentWillUnmount() {\n        this.listener()\n    }\n\n    render() {\n        const { authUser } = this.state\n        const { firebase } = this.props\n        return (\n            <div className=\"App\">\n                {authUser ? (\n                    <React.Fragment>\n                        <Header firebase={firebase} />\n                        <List />\n                    </React.Fragment>\n                ) : (\n                    <SignIn />\n                )}\n            </div>\n        )\n    }\n}\n\nconst Header = ({ firebase }) => {\n    return (\n        <header>\n            <button onClick={firebase.doSignOut}>\n                <Logo />\n            </button>\n        </header>\n    )\n}\n\nexport default withFirebase(App)\n","import App from \"./App.js\"\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./components/App\"\nimport Firebase, { FirebaseContext } from \"./components/Firebase\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}